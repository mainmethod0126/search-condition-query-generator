/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0.2/userguide/building_java_projects.html
 */

buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "io.github.mainmethod0126:app:0.1.1"
  }
}

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

apply plugin: "io.github.mainmethod0126.simple-semantic-version"


repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {

	String inputUsername = project.findProperty("username") ?: ""
	String inputPassword = project.findProperty("password") ?: ""
  String inputMavenRepoUrl = project.findProperty("url") ?: ""

	if (inputUsername.isEmpty()) {
		if (project.hasProperty('mavenRepoUserId')) {
			inputUsername = "$mavenRepoUserId"
		} else {
			println("Warning : Id for using maven repository is not entered. Enter it using the gradle task parameter or define mavenRepoUserId in ~/.gradle/gradle.properties");
		}
	}

	if (inputPassword.isEmpty()) {
		if (project.hasProperty('mavenRepoUserPassword')) {
			inputPassword = "$mavenRepoUserPassword"
		} else {
			println("Warning : Password for using maven repository is not entered. Enter it using the gradle task parameter or define mavenRepoUserPassword in ~/.gradle/gradle.properties");
		}
	}

  if (inputMavenRepoUrl.isEmpty()) {
    if (project.hasProperty('mavenRepoUrl')) {
      inputMavenRepoUrl = "$mavenRepoUrl"
    } else {
      println("Warning : maven repository url is required but not entered. Enter it using the gradle task parameter or define mavenRepoUrl in ~/.gradle/gradle.properties");
    }
  }

  publications {
    mavenJava(MavenPublication) { 
      from components.java

      groupId = 'io.github.mainmethod0126'
      artifactId = 'search-condition-query-generator'

      println("publish infos")
      println("groupId : " + groupId)
      println("artifactId : " + artifactId)
      
      
      pom {
          name = 'search-condition-query-generator'
          description = 'This library makes it easy to convert a predefined Search Condition specification into query formats for databases like Elasticsearch and RDB.'
          url = 'https://github.com/mainmethod0126/search-condition-query-generator'

          licenses {
              license {
                  name = 'MIT'
                  url = 'https://github.com/mainmethod0126/search-condition-query-generator/blob/main/LICENSE'
              }
          }
          developers {
              developer {
                  id = 'mainmethod0126'
                  name = 'Shin Woosub'
                  email = 'mainmethod0126@gmail.com'
              }
          }
          scm {
              connection = 'scm:git:git://github.com/mainmethod0126/search-condition-query-generator.git'
              developerConnection = 'scm:git:ssh://github.com:mainmethod0126/search-condition-query-generator.git'
              url = 'https://github.com/mainmethod0126/search-condition-query-generator'
          }
      }
    }
  }

  repositories {
    maven{
      credentials {
          username = inputUsername
          password = inputPassword
      }

      url = inputMavenRepoUrl
    }
  }
}


dependencies {
    implementation 'org.elasticsearch.client:elasticsearch-rest-high-level-client:7.17.6'
    implementation 'org.elasticsearch.client:elasticsearch-rest-client:7.17.6'
    implementation 'org.elasticsearch:elasticsearch:7.17.6'

    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'

    // https://mvnrepository.com/artifact/org.assertj/assertj-core
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.24.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'
}

signing {
    sign publishing.publications.mavenJava
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

